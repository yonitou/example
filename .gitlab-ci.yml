# Cache node modules - speeds up future builds
cache:
    paths:
        - node_modules

variables:
    S3_BUCKET_PROD: ${NX_BUCKET_PROD}
    S3_BUCKET_DEV: ${NX_BUCKET_DEV}
    DISTR_ID_TEST: ${NX_CLOUDFRONT_DISTRIBUTION_ID_TEST}
    DISTR_ID_PROD: ${NX_CLOUDFRONT_DISTRIBUTION_ID_PROD}
    GOOGLE_MAPS_API: ${NX_GOOGLE_MAPS_API}
    SENTRY_AUTH_TOKEN: ${NX_SENTRY_AUTH_TOKEN}
    VERSION: "2.7.2"

stages:
    - test
    - build
    - deploy

.distributed:
  image: node:16
  interruptible: true
  only:
    - develop
    - release

  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-offline --legacy-peer-deps
    - NX_HEAD=$CI_COMMIT_SHA
    - NX_BASE=${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
  artifacts:
    paths:
      - node_modules/.cache/nx

format-check:
  stage: test
  extends: .distributed
  script:
    - npx nx format:check --base=$NX_BASE --head=$NX_HEAD

lint:
  stage: test
  extends: .distributed
  script:
    - npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=tsc --parallel=3
    - npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=ts-prune --parallel=3
    - npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=lint --parallel=3


build_develop:
    stage: build
    extends: .distributed
    before_script:
        - npm ci --cache .npm --prefer-offline --legacy-peer-deps
        - NX_HEAD=$CI_COMMIT_SHA
        - NX_BASE=${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
        - export NX_VERSION=${VERSION}
        - export NX_SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
        - export NX_GOOGLE_MAPS_API=${GOOGLE_MAPS_API}
        - export NX_ENV="staging"
    script:
        - npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=build --parallel=3 --configuration=staging
    only:
      - develop
    artifacts:
        paths:
          - dist/apps/dashboard
        expire_in: "10 days"

build_release:
    stage: build
    extends: .distributed
    before_script:
        - npm ci --cache .npm --prefer-offline --legacy-peer-deps
        - NX_HEAD=$CI_COMMIT_SHA
        - NX_BASE=${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
        - export NX_VERSION=${VERSION}
        - export NX_SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
        - export NX_GOOGLE_MAPS_API=${GOOGLE_MAPS_API}
        - export NX_ENV="production"
    script:
        - npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=build --parallel=3 --configuration=production
    only:
      - release
    artifacts:
        paths:
          - dist/apps/dashboard
        expire_in: "10 days"

# build_release:
#     image: node:16
#     stage: build
#     before_script:
#         - export REACT_APP_VERSION=${VERSION}
#         - export SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
#         - export REACT_APP_GOOGLE_API=${GOOGLE_MAPS_API}
#     script:
#         - npm install --legacy-peer-deps # Install all dependencies
#         - npm run build:prod # Build command
#     artifacts:
#         paths:
#             - ./build
#     only:
#         - release

deploy_develop:
    image: python:latest
    stage: deploy
    before_script:
        - export S3_BUCKET=dashboard-monorepo
        # - export DISTR_ID=${DISTR_ID_TEST}
    script:
        - pip install awscli #Install awscli tools
        - aws s3 sync ./build/ s3://${S3_BUCKET}
        # - aws cloudfront create-invalidation --distribution-id ${DISTR_ID} --paths "/*"
    only:
        - develop

# deploy_release:
#     image: python:latest
#     stage: deploy
#     before_script:
#         - export S3_BUCKET=${S3_BUCKET_PROD}
#         - export DISTR_ID=${DISTR_ID_PROD}
#     script:
#         - pip install awscli #Install awscli tools
#         - aws s3 sync ./build/ s3://${S3_BUCKET}
#         - aws cloudfront create-invalidation --distribution-id ${DISTR_ID} --paths "/*"
#     only:
#         - release
