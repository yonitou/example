# Cache node modules - speeds up future builds
cache:
    paths:
        - node_modules

variables:
    S3_BUCKET_PROD: ${BUCKET_PROD}
    S3_BUCKET_DEV: ${BUCKET_DEV}
    DISTR_ID_TEST: ${CLOUDFRONT_DISTRIBUTION_ID_TEST}
    DISTR_ID_PROD: ${CLOUDFRONT_DISTRIBUTION_ID_PROD}
    VERSION: "2.6.5"

stages:
    - build
    - deploy

build_develop:
    image: node:16
    stage: build
    before_script:
        - export REACT_APP_VERSION=${VERSION}
        - export SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
        - export REACT_APP_GOOGLE_API=${GOOGLE_MAPS_API}
    script:
        - npm install --legacy-peer-deps # Install all dependencies
        - npm run build:dev # Build command
    artifacts:
        paths:
            - ./build
    only:
        - develop

build_release:
    image: node:16
    stage: build
    before_script:
        - export REACT_APP_VERSION=${VERSION}
        - export SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
        - export REACT_APP_GOOGLE_API=${GOOGLE_MAPS_API}
    script:
        - npm install --legacy-peer-deps # Install all dependencies
        - npm run build:prod # Build command
    artifacts:
        paths:
            - ./build
    only:
        - release

deploy_develop:
    image: python:latest
    stage: deploy
    before_script:
        - export S3_BUCKET=${S3_BUCKET_DEV}
        - export DISTR_ID=${DISTR_ID_TEST}
    script:
        - pip install awscli #Install awscli tools
        - aws s3 sync ./build/ s3://${S3_BUCKET}
        - aws cloudfront create-invalidation --distribution-id ${DISTR_ID} --paths "/*"
    only:
        - develop

deploy_release:
    image: python:latest
    stage: deploy
    before_script:
        - export S3_BUCKET=${S3_BUCKET_PROD}
        - export DISTR_ID=${DISTR_ID_PROD}
    script:
        - pip install awscli #Install awscli tools
        - aws s3 sync ./build/ s3://${S3_BUCKET}
        - aws cloudfront create-invalidation --distribution-id ${DISTR_ID} --paths "/*"
    only:
        - release
